name: Deploy to production

on:
  push:
    branches: [ "main" ]

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.28.3'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Load and save secret to app.env
      run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r "to_entries| map(\"\(.key)=\(.value)\") | .[]" > app.env
      
    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: simplebank
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
        docker push -a $REGISTRY/$REPOSITORY

    - name: Update kube config
      run: aws eks update-kubeconfig --name simple-bank --region ap-southeast-1

    - name: Deploy image to AWS EKS
      run: |
        kubectl apply -f aws/eks/aws-auth.yaml
        kubectl apply -f aws/eks/deployment.yaml
        kubectl apply -f aws/eks/service.yaml
        kubectl apply -f aws/eks/issuer.yaml
        kubectl apply -f aws/eks/ingress-nginx.yaml
        kubectl apply -f aws/eks/ingress-http.yaml
        kubectl apply -f aws/eks/ingress-grpc.yaml